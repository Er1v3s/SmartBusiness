
networks:
  # smart_business_network:
  #   driver: bridge
  monitoring:
    driver: bridge

volumes:
  prometheus-data:
    driver: local
  grafana-data:
    driver: local

services:

  smart_business.api:
    environment:
      - ASPNETCORE_ENVIRONMENT=Development
      - ASPNETCORE_HTTP_PORTS=2000
      - ASPNETCORE_HTTPS_PORTS=2001
      - ASPNETCORE_Kestrel__Certificates__Default__Password=123
      - ASPNETCORE_Kestrel__Certificates__Default__Path=/https/smartbusiness.pfx
      - Otel__Endpoint=http://otel-collector:4317 
    container_name: smart_business.api
    image: smart_business.api
    build:
      context: .
      dockerfile: SmartBusiness.Api/Dockerfile
    ports:
      - "2000:2000"
      - "2001:2001"
    volumes:
      - ~/.aspnet/https:/https:ro
    depends_on:
      otel-collector:
        condition: service_started
      database.server:
        condition: service_healthy

    networks:
      # - smart_business_network
      - monitoring

  database.server:
    image: "mcr.microsoft.com/mssql/server"
    container_name: database.server
    ports:
      - "1433:1433"
    environment:
      - ACCEPT_EULA=y
      - SA_PASSWORD=SuperPassword123
    volumes:
      - ./sqlserver/data:/var/opt/mssql/data
      - ./sqlserver/log:/var/opt/mssql/log
    healthcheck:
      test: /opt/mssql-tools18/bin/sqlcmd -C -S localhost -U SA -P "SuperPassword123" -Q "SELECT 1" || exit 1
      interval: 10s
      timeout: 3s
      retries: 10
      start_period: 30s
    networks:
      # - smart_business_network
      - monitoring

  otel-collector:
    image: otel/opentelemetry-collector:0.95.0
    container_name: otel-collector
    command: ["--config=/etc/otel-collector-config.yml"]
    volumes:
      - ./SmartBusiness.Api/config/otel-collector-config.yml:/etc/otel-collector-config.yml
    ports:
      - "8888:8888" 
      - "8889:8889" 
      - "13133:13133"
      - "4317:4317"
    networks:
      - monitoring

  prometheus:
    image: prom/prometheus:latest
    container_name: prometheus
    ports:
      - 9090:9090
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
    volumes:
      - ./SmartBusiness.Api/config/prometheus.yml:/etc/prometheus/prometheus.yml
      - prometheus-data:/prometheus
    restart: unless-stopped
    networks:
      - monitoring

  grafana:
    image: grafana/grafana-oss:latest
    container_name: grafana
    ports:
      - '3000:3000'
    volumes:
      - grafana-data:/var/lib/grafana
    environment:
      - GF_SECURITY_ADMIN_PASSWORD=SuperPassword123
    restart: unless-stopped
    networks:
      - monitoring

  node_exporter:
    image: quay.io/prometheus/node-exporter:v1.5.0
    container_name: node_exporter
    command: '--path.rootfs=/host'
    pid: host
    restart: unless-stopped
    volumes:
      - /proc:/host/proc:ro
      - /sys:/host/sys:ro
      - /:/rootfs:ro
    networks:
      - monitoring

      